if [ -d /disks/home/smoser ]; then
   HOME=/disks/home/smoser
   cd "$HOME" || echo "failed cd '$HOME'"

   [ -d "$HOME/bin" ] || mkdir -p "$HOME/bin"
fi

if [ ! -e "/run/bootstrap/system-setup" ]; then
    if [ -x "$HOME/tilda/setup/system" ]; then
        sudo sh -c "
           mkdir -p /run/bootstrap &&
           $HOME/tilda/setup/system &&
           date -R > /run/bootstrap/system-setup" ||
           echo "failed system setup :-("
    fi
    if [ ! -w /disks/home/smoser ] && [ -x /disks/home/remount-disk ]; then
        sudo /disks/home/remount-disk ||
            { echo "WARN remount-disk failed $?"; sleep 3; }
    fi
fi

if [ -x "$HOME/tilda/setup/user" ] &&
    _uid=$(id -u) &&
    _stamp=/run/user/$_uid/setup-user && _tstamp="/tmp/setup-user-$_uid" &&
    ! { [ -e "$_stamp" ] || [ -e "$_tstamp" ]; }; then

    # tstamp is just in case /run/user doesnt' work.
    date -R > "$_stamp" || date -R > "$_tstamp"
    _oldgroups=$(groups)
    if "$HOME/tilda/setup/user"; then
        _newgroups=$(sudo -u "$LOGNAME" HOME= --login groups </dev/null)
        if [ "$_newgroups" != "$_oldgroups" ]; then
            echo "executing new login shell to get new groups"
            exec sudo -Hu "$LOGNAME" --login \
                ${SSH_AUTH_SOCK:+"SSH_AUTH_SOCK=$SSH_AUTH_SOCK"}
        fi
    else
        echo "Failed user-setup"
    fi
    unset _oldgroups _newgroups
fi
unset _uid _stamp _tstamp

if [ -t 0 ] && [ -t 1 ] && command -v login-images >/dev/null 2>&1; then
    h=$(date +%H)
    if [ "$h" -lt 18 ]; then
        login-images --keepalive --until="18:00"
    else
        echo "not login-images, its after 6:00 PM local time"
    fi
    unset h
fi

export EDITOR=vi
PATH=$HOME/bin:$HOME/go/bin:/usr/local/bin:/usr/bin:/usr/sbin:/bin:/sbin
