#!/bin/sh
#
TEMP_D=""

cleanup() {
    [ -n "$TEMP_D" ] || return 0
    rm -Rf "$TEMP_D"
}

TEMP_D=$(mktemp -d)
trap cleanup EXIT

cd "$TEMP_D"

machine=$(uname -m)
arch=$machine
os=$(uname -s | tr '[:upper:]' '[:lower:]')
case "$machine" in
    aarch64) arch=arm64;;
esac

if [ -x "$HOME/bin/chainctl" ]; then
  chainctl update --yes
else
  echo "Getting chainactl from $url"
  url="https://dl.enforce.dev/chainctl/latest/chainctl_${os}_${arch}"
  curl -o chainctl "$url"
  install -m 0755 chainctl "$HOME/bin/"
fi

chainctl config set auth.device-flow chainguard
chainctl config set default.social-login google-oauth2
chainctl config set auth.mode headless

gobuilds="
chainguard.dev/melange@latest
chainguard.dev/apko@latest
github.com/chainguard-dev/yam@latest
github.com/jonjohnsonjr/apkrane@latest
github.com/sigstore/cosign/v2/cmd/cosign@latest
github.com/google/go-containerregistry/cmd/crane@latest
github.com/sigstore/gitsign@latest
"

for u in $gobuilds; do
    echo ":: building $u"
    go install "$u"
done

if ! command -v wolfictl >/dev/null 2>&1; then
    mkdir "$HOME/src"
    cd "$HOME/src"
    if [ ! -d wolfictl ]; then
        git clone -o upstream https://github.com/wolfi-dev/wolfictl
    fi
    cd wolfictl
    go install
fi

# gcloud
# https://cloud.google.com/sdk/docs/install#linux
garch=$machine
echo "Installing gcloud"
[ "$garch" = "aarch64" ] && garch="arm"
url=https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-linux-${garch}.tar.gz
( d=$(mktemp -d) &&
   trap "rm -Rf '$d'" EXIT &&
   dest="$HOME/software" &&
   idir="google-cloud-sdk" &&
   cd "$d" && curl -o gcloud.tar.gz "$url" &&
   tar -xf gcloud.tar.gz &&
   rm -Rf "$dest/$idir" &&
   mkdir -p "$dest" &&
   mv "$idir" "$dest"
)

gists="
login-images:568f03b41efe80f57cea4605beec71ac
get-sbom:90730d2c62cb5a34adcaccf41d997d2b
wolfi-tools:0a11e2643b884960c1e5349d4dc0b8c7
upgrade:2217cde1a876d9d1e014
"

mkdir -p "$HOME/gists"
cd "$HOME/gists"
burl=https://gist.github.com/smoser/
for gist in $gists; do
    name="${gist%:*}"
    hash=${gist#*:}
    if [ -d "$name" ]; then
        ( cd "$name"
          git fetch upstream
          git checkout upstream/main )
    else
        git clone -o upstream "$burl$hash" "$name"
    fi
done
